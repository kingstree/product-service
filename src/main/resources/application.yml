server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5


spring:
  application:
    name: product-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
  sql: #sql 스크립트에서 데이터 베이스 스키마 초기화
    init:
      mode: always

  datasource:
    username: postgres
    password: postgres
    url: jdbc:postgresql://127.0.0.1:5432/bookshopdb_product
    hikari:
      connection-timeout: 2000 #ms
      maximum-pool-size: 5
  security:
    oauth2:
      resourceserver:
        jwt: #OAuth2는 액세스 토큰에 대한 데이터 형식을 강제로 규정핮 ㅣ않기에 명시적으로 지정해야 함 (지금은 jwt로 사용)
          issuer-uri: http://localhost:8080/realms/bookshop
management:
  endpoints:
    web:
      exposure:
        include: refresh


polar:
  greeting: Welcome to the local book catalog!
